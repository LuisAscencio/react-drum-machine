{"ast":null,"code":"var _jsxFileName = \"/Users/luismiguelascencio/Development/labs/FINAL/granular-test1/src/components/StepSequencer.js\";\nimport React from \"react\";\nimport { Transport } from \"tone\";\nimport { Knob } from \"react-rotary-knob\";\nimport * as skins from \"react-rotary-knob-skin-pack\";\nimport Step from \"./Step\";\n\nclass StepSequencer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clickHandler = e => {\n      // console.log(e.target.dataset.id);\n      let newVal = e.target.dataset.id;\n      this.setState({\n        [newVal]: !this.state[newVal]\n      }); // console.log(this.state);\n    };\n\n    this.stepHandler = val => {\n      console.log(Math.trunc(val));\n      this.setState({\n        val: Math.trunc(val)\n      }); // console.log(this.state.val);\n\n      this.count = Math.trunc(val) - 1;\n      let newArray = Array(Math.trunc(val)).fill(1);\n      this.setState({\n        arrayLength: newArray\n      }); // console.log(newArray);\n    };\n\n    this.resetHandler = () => {\n      this.index = 0;\n    };\n\n    this.checkStep = time => {\n      // console.log(\"yey\", this.state[this.index + 100], this.index + 100);\n      // console.log(this.index, this.count);\n      // this.setState({\n      //   [this.index + 16]: false\n      // });\n      // this.setState({\n      //   background: [...this.state.background, ]\n      // });\n      console.log(this.count);\n      console.log(\"index:\", this.index);\n\n      if (this.index + this.count + 100) {\n        this.setState({\n          115: false\n        });\n      }\n\n      this.setState({\n        [this.index + 99]: !this.state[this.index + 99]\n      });\n      this.setState({\n        [this.index + 100]: !this.state[this.index + 100]\n      });\n\n      if (this.state[this.index] === true) {\n        // console.log(\"trig\");\n        this.props.triggerHandler();\n      }\n\n      if (this.index < this.count) {\n        this.index++;\n      } else if (this.index === this.count) {\n        this.index = 0;\n      } else {\n        this.index = this.index - this.count;\n      }\n    };\n\n    this.state = {\n      arrayLength: Array(16).fill(1),\n      val: 16,\n      /// Background:::\n      100: false,\n      101: false,\n      102: false,\n      103: false,\n      104: false,\n      105: false,\n      106: false,\n      107: false,\n      108: false,\n      109: false,\n      110: false,\n      111: false,\n      112: false,\n      113: false,\n      114: false,\n      115: false,\n      ///Clicked:::\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n      6: false,\n      7: false,\n      8: false,\n      9: false,\n      10: false,\n      11: false,\n      12: false,\n      13: false,\n      14: false,\n      15: false\n    };\n    Transport.scheduleRepeat(this.checkStep, \"8n\");\n    this.index = 0;\n    this.count = 15;\n  } ///Steps changes:::\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.resetHandler,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"reset Sequencer\"), React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"knob\",\n      style: {\n        marginRight: \"10px\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"knobText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Steps\"), React.createElement(Knob, {\n      skin: skins.s16,\n      unlockDistance: 30,\n      onChange: this.stepHandler,\n      min: 1,\n      max: 16,\n      clampMax: 180,\n      rotateDegrees: 270,\n      value: this.state.val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), this.state.arrayLength.map((x, i) => {\n      return React.createElement(Step, {\n        key: i,\n        clickHandler: this.clickHandler,\n        id: i,\n        clicked: this.state[i],\n        borderColor: this.state[i + 100],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default StepSequencer;","map":{"version":3,"sources":["/Users/luismiguelascencio/Development/labs/FINAL/granular-test1/src/components/StepSequencer.js"],"names":["React","Transport","Knob","skins","Step","StepSequencer","Component","constructor","props","clickHandler","e","newVal","target","dataset","id","setState","state","stepHandler","val","console","log","Math","trunc","count","newArray","Array","fill","arrayLength","resetHandler","index","checkStep","time","triggerHandler","scheduleRepeat","render","flex","flexDirection","marginRight","display","s16","map","x","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Transport } from \"tone\";\nimport { Knob } from \"react-rotary-knob\";\nimport * as skins from \"react-rotary-knob-skin-pack\";\nimport Step from \"./Step\";\n\nclass StepSequencer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arrayLength: Array(16).fill(1),\n      val: 16,\n      /// Background:::\n      100: false,\n      101: false,\n      102: false,\n      103: false,\n      104: false,\n      105: false,\n      106: false,\n      107: false,\n      108: false,\n      109: false,\n      110: false,\n      111: false,\n      112: false,\n      113: false,\n      114: false,\n      115: false,\n\n      ///Clicked:::\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n      6: false,\n      7: false,\n      8: false,\n      9: false,\n      10: false,\n      11: false,\n      12: false,\n      13: false,\n      14: false,\n      15: false\n    };\n\n    Transport.scheduleRepeat(this.checkStep, \"8n\");\n    this.index = 0;\n    this.count = 15;\n  }\n  ///Steps changes:::\n  clickHandler = e => {\n    // console.log(e.target.dataset.id);\n    let newVal = e.target.dataset.id;\n    this.setState({\n      [newVal]: !this.state[newVal]\n    });\n\n    // console.log(this.state);\n  };\n\n  stepHandler = val => {\n    console.log(Math.trunc(val));\n    this.setState({ val: Math.trunc(val) });\n    // console.log(this.state.val);\n    this.count = Math.trunc(val) - 1;\n    let newArray = Array(Math.trunc(val)).fill(1);\n    this.setState({\n      arrayLength: newArray\n    });\n    // console.log(newArray);\n  };\n\n  resetHandler = () => {\n    this.index = 0;\n  };\n\n  checkStep = time => {\n    // console.log(\"yey\", this.state[this.index + 100], this.index + 100);\n    // console.log(this.index, this.count);\n    // this.setState({\n    //   [this.index + 16]: false\n    // });\n\n    // this.setState({\n    //   background: [...this.state.background, ]\n    // });\n    console.log(this.count);\n    console.log(\"index:\", this.index);\n    if (this.index + this.count + 100) {\n      this.setState({\n        115: false\n      });\n    }\n    this.setState({\n      [this.index + 99]: !this.state[this.index + 99]\n    });\n    this.setState({\n      [this.index + 100]: !this.state[this.index + 100]\n    });\n\n    if (this.state[this.index] === true) {\n      // console.log(\"trig\");\n      this.props.triggerHandler();\n    }\n\n    if (this.index < this.count) {\n      this.index++;\n    } else if (this.index === this.count) {\n      this.index = 0;\n    } else {\n      this.index = this.index - this.count;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.resetHandler} type=\"button\">\n          reset Sequencer\n        </button>\n        <div\n          style={{\n            flex: 1,\n            flexDirection: \"row\"\n          }}\n        >\n          <div\n            className=\"knob\"\n            style={{\n              marginRight: \"10px\",\n              display: \"inline-block\"\n            }}\n          >\n            <small className=\"knobText\">Steps</small>\n            <Knob\n              skin={skins.s16}\n              unlockDistance={30}\n              onChange={this.stepHandler}\n              min={1}\n              max={16}\n              clampMax={180}\n              rotateDegrees={270}\n              value={this.state.val}\n            />\n          </div>\n          {this.state.arrayLength.map((x, i) => {\n            return (\n              <Step\n                key={i}\n                clickHandler={this.clickHandler}\n                id={i}\n                clicked={this.state[i]}\n                borderColor={this.state[i + 100]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StepSequencer;\n"]},"metadata":{},"sourceType":"module"}