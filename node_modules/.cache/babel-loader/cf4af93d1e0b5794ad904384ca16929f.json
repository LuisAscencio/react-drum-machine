{"ast":null,"code":"class Events {\n  constructor() {\n    this.listeners = [];\n  }\n\n  on(events, listener) {\n    if (typeof events === 'string') {\n      events = [events];\n    }\n\n    events.forEach(event => {\n      if (!this.listeners[event]) {\n        this.listeners[event] = [];\n      }\n\n      this.listeners[event].push(listener);\n    });\n  }\n\n  off(events, listener) {\n    if (typeof events === 'string') {\n      events = [events];\n    }\n\n    events.forEach(event => {\n      if (!this.listeners[event]) {\n        return;\n      }\n\n      if (this.listeners[event].indexOf(listener) !== -1) {\n        this.listeners[event] = this.listeners[event].filter(l => l !== listener);\n      }\n    });\n  }\n\n  fire(event, context) {\n    if (!this.listeners[event]) {\n      return;\n    }\n\n    this.listeners[event].forEach(function (listener) {\n      listener(context);\n    });\n  }\n\n}\n\nexport default Events;","map":null,"metadata":{},"sourceType":"module"}