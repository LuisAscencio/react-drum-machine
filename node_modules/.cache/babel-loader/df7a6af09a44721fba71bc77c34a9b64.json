{"ast":null,"code":"var _jsxFileName = \"/Users/luismiguelascencio/Development/labs/FINAL/granular-test1/src/components/StepSequencer.js\";\nimport React from \"react\";\nimport { Knob } from \"react-rotary-knob\";\nimport * as skins from \"react-rotary-knob-skin-pack\";\nimport Step from \"./Step\";\n\nclass StepSequencer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arrayLength: Array(16).fill(false),\n      val: 16,\n      clicked: false\n    };\n\n    this.clickHandler = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.stepHandler = val => {\n      this.setState({\n        val: Math.trunc(val)\n      });\n      console.log(this.state.val);\n      let newArray = Array(this.state.val).fill(false);\n      this.setState({\n        arrayLength: newArray\n      });\n      console.log(newArray);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"knob\",\n      style: {\n        marginRight: \"10px\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"knobText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Steps\"), React.createElement(Knob, {\n      skin: skins.s16,\n      unlockDistance: 30,\n      onChange: this.stepHandler,\n      min: 1,\n      max: 16,\n      clampMax: 180,\n      rotateDegrees: 270,\n      value: this.state.val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), this.state.arrayLength.map((x, i) => {\n      return React.createElement(Step, {\n        key: i,\n        \"data-id\": i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default StepSequencer;","map":{"version":3,"sources":["/Users/luismiguelascencio/Development/labs/FINAL/granular-test1/src/components/StepSequencer.js"],"names":["React","Knob","skins","Step","StepSequencer","Component","state","arrayLength","Array","fill","val","clicked","clickHandler","setState","stepHandler","Math","trunc","console","log","newArray","render","flex","flexDirection","marginRight","display","s16","map","x","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACNC,MAAAA,WAAW,EAAEC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,KAAf,CADP;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADkC;;AAAA,SAO1CC,YAP0C,GAO3B,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK;AADT,OAAd;AAGD,KAXyC;;AAAA,SAa1CG,WAb0C,GAa5BJ,GAAG,IAAI;AACnB,WAAKG,QAAL,CAAc;AAAEH,QAAAA,GAAG,EAAEK,IAAI,CAACC,KAAL,CAAWN,GAAX;AAAP,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWI,GAAvB;AAEA,UAAIS,QAAQ,GAAGX,KAAK,CAAC,KAAKF,KAAL,CAAWI,GAAZ,CAAL,CAAsBD,IAAtB,CAA2B,KAA3B,CAAf;AACA,WAAKI,QAAL,CAAc;AACZN,QAAAA,WAAW,EAAEY;AADD,OAAd;AAGAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACD,KAtByC;AAAA;;AAuB1CC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,aAAa,EAAE;AAFV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,WAAW,EAAE,MADR;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,EAQE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEtB,KAAK,CAACuB,GADd;AAEE,MAAA,cAAc,EAAE,EAFlB;AAGE,MAAA,QAAQ,EAAE,KAAKX,WAHjB;AAIE,MAAA,GAAG,EAAE,CAJP;AAKE,MAAA,GAAG,EAAE,EALP;AAME,MAAA,QAAQ,EAAE,GANZ;AAOE,MAAA,aAAa,EAAE,GAPjB;AAQE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWI,GARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CANF,EAyBG,KAAKJ,KAAL,CAAWC,WAAX,CAAuBmB,GAAvB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpC,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAX;AAAc,mBAASA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CAzBH,CADF,CADF;AAiCD;;AAzDyC;;AA4D5C,eAAexB,aAAf","sourcesContent":["import React from \"react\";\nimport { Knob } from \"react-rotary-knob\";\nimport * as skins from \"react-rotary-knob-skin-pack\";\nimport Step from \"./Step\";\n\nclass StepSequencer extends React.Component {\n  state = {\n    arrayLength: Array(16).fill(false),\n    val: 16,\n    clicked: false\n  };\n\n  clickHandler = () => {\n    this.setState({\n      clicked: !this.state.clicked\n    });\n  };\n\n  stepHandler = val => {\n    this.setState({ val: Math.trunc(val) });\n    console.log(this.state.val);\n\n    let newArray = Array(this.state.val).fill(false);\n    this.setState({\n      arrayLength: newArray\n    });\n    console.log(newArray);\n  };\n  render() {\n    return (\n      <div>\n        <div\n          style={{\n            flex: 1,\n            flexDirection: \"row\"\n          }}\n        >\n          <div\n            className=\"knob\"\n            style={{\n              marginRight: \"10px\",\n              display: \"inline-block\"\n            }}\n          >\n            <small className=\"knobText\">Steps</small>\n            <Knob\n              skin={skins.s16}\n              unlockDistance={30}\n              onChange={this.stepHandler}\n              min={1}\n              max={16}\n              clampMax={180}\n              rotateDegrees={270}\n              value={this.state.val}\n            />\n          </div>\n          {this.state.arrayLength.map((x, i) => {\n            return <Step key={i} data-id={i} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StepSequencer;\n"]},"metadata":{},"sourceType":"module"}