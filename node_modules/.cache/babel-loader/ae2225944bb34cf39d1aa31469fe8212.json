{"ast":null,"code":"var _jsxFileName = \"/Users/luismiguelascencio/Development/labs/FINAL/granular-test1/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Tone from \"tone\";\nimport Granular from \"granular-js\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.clickHandler = () => {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.oAudioContext;\n      var context = new AudioContext();\n      var buffer, buffer2; //global variables for sample files\n      //master gain node\n\n      var master = context.createGain();\n      master.connect(context.destination); //global varuables\n\n      var w, h;\n      var data;\n      var drawingdata = []; //an array that keeps the data\n\n      var voices = []; //an array for touch events - polyphonic\n\n      var voicesmono = []; //this will be used for mouse events - monophonic\n\n      var isloaded = false;\n      var X = 0;\n      var Y = 0;\n      var mouseState = false;\n      var helpvisible = true; //control initial settings\n\n      var attack = 0.4;\n      var release = 0.4;\n      var density = 0.85;\n      var spread = 0.2;\n      var reverb = 0.5;\n      var pan = 0.1;\n      var trans = 1; //the grain class\n\n      function grain(p, buffer, positionx, positiony, attack, release, spread, pan) {\n        var that = this; //for scope issues\n\n        this.now = context.currentTime; //update the time value\n        //create the source\n\n        this.source = context.createBufferSource();\n        this.source.playbackRate.value = this.source.playbackRate.value * trans;\n        this.source.buffer = buffer; //create the gain for enveloping\n\n        this.gain = context.createGain(); //experimenting with adding a panner node - not all the grains will be panned for better performance\n\n        var yes = parseInt(p.random(3), 10);\n\n        if (yes === 1) {\n          this.panner = context.createPanner();\n          this.panner.panningModel = \"equalpower\";\n          this.panner.distanceModel = \"linear\";\n          this.panner.setPosition(p.random(pan * -1, pan), 0, 0); //connections\n\n          this.source.connect(this.panner);\n          this.panner.connect(this.gain);\n        } else {\n          this.source.connect(this.gain);\n        }\n\n        this.gain.connect(master); //update the position and calcuate the offset\n\n        this.positionx = positionx;\n        this.offset = this.positionx * (buffer.duration / w); //pixels to seconds\n        //update and calculate the amplitude\n\n        this.positiony = positiony;\n        this.amp = this.positiony / h;\n        this.amp = p.map(this.amp, 0.0, 1.0, 1.0, 0.0) * 0.7; //parameters\n\n        this.attack = attack * 0.4;\n        this.release = release * 1.5;\n\n        if (this.release < 0) {\n          this.release = 0.1; // 0 - release causes mute for some reason\n        }\n\n        this.spread = spread;\n        this.randomoffset = Math.random() * this.spread - this.spread / 2; //in seconds\n        ///envelope\n\n        this.source.start(this.now, this.offset + this.randomoffset, this.attack + this.release); //parameters (when,offset,duration)\n\n        this.gain.gain.setValueAtTime(0.0, this.now);\n        this.gain.gain.linearRampToValueAtTime(this.amp, this.now + this.attack);\n        this.gain.gain.linearRampToValueAtTime(0, this.now + (this.attack + this.release)); //garbage collection\n\n        this.source.stop(this.now + this.attack + this.release + 0.1);\n        var tms = (this.attack + this.release) * 1000; //calculate the time in miliseconds\n\n        setTimeout(function () {\n          that.gain.disconnect();\n\n          if (yes === 1) {\n            that.panner.disconnect();\n          }\n        }, tms + 200); //drawing the lines\n\n        p.stroke(p.random(125) + 125, p.random(250), p.random(250)); //,(this.amp + 0.8) * 255\n        //p.strokeWeight(this.amp * 5);\n\n        this.randomoffsetinpixels = this.randomoffset / (buffer.duration / w); //p.background();\n\n        p.line(this.positionx + this.randomoffsetinpixels, 0, this.positionx + this.randomoffsetinpixels, p.height);\n        setTimeout(function () {\n          p.background();\n          p.line(that.positionx + that.randomoffsetinpixels, 0, that.positionx + that.randomoffsetinpixels, p.height);\n        }, 200);\n      } //the voice class\n\n\n      function voice(id) {\n        this.touchid = id; //the id of the touch event\n      } //play function for mouse event\n\n\n      voice.prototype.playmouse = function (p) {\n        this.grains = [];\n        this.grainscount = 0;\n        var that = this; //for scope issues\n\n        this.play = function () {\n          //create new grain\n          var g = new grain(p, buffer, p.mouseX, p.mouseY, attack, release, spread, pan); //push to the array\n\n          that.grains[that.graincount] = g;\n          that.graincount += 1;\n\n          if (that.graincount > 20) {\n            that.graincount = 0;\n          } //next interval\n\n\n          this.dens = p.map(density, 1, 0, 0, 1);\n          this.interval = this.dens * 500 + 70;\n          that.timeout = setTimeout(that.play, this.interval);\n        };\n\n        this.play();\n      }; //play function for touch events - this will get the position from touch events\n\n\n      voice.prototype.playtouch = function (p, positionx, positiony) {\n        //this.positiony = positiony;\n        this.positionx = positionx;\n        this.positiony = positiony;\n        this.grains = [];\n        this.graincount = 0;\n        var that = this; //for scope issues\n\n        this.play = function () {\n          //create new grain\n          var g = new grain(p, buffer, that.positionx, that.positiony, attack, release, spread, pan); //push to the array\n\n          that.grains[that.graincount] = g;\n          that.graincount += 1;\n\n          if (that.graincount > 30) {\n            that.graincount = 0;\n          } //next interval\n\n\n          this.dens = p.map(density, 1, 0, 0, 1);\n          this.interval = this.dens * 500 + 70;\n          that.timeout = setTimeout(that.play, this.interval);\n        };\n\n        this.play();\n      }; //stop method\n\n\n      voice.prototype.stop = function () {\n        clearTimeout(this.timeout);\n      }; //loading the first sound with XML HTTP REQUEST\n\n\n      var request = new XMLHttpRequest();\n      request.open(\"GET\", \"audio/guitar.mp3\", true);\n      request.responseType = \"arraybuffer\";\n\n      request.onload = function () {\n        context.decodeAudioData(request.response, function (b) {\n          buffer = b; //set the buffer\n\n          data = buffer.getChannelData(0);\n          isloaded = true;\n          var canvas1 = document.getElementById(\"canvas\"); //initialize the processing draw when the buffer is ready\n\n          var processing = new Processing(canvas1, waveformdisplay);\n        }, function () {\n          console.log(\"loading failed\");\n        });\n      };\n\n      request.send(); //processing - waveform display - canvas\n\n      function waveformdisplay(p) {\n        w = parseInt($(\"#waveform\").css(\"width\"), 10); //get the width\n\n        h = parseInt($(\"#waveform\").css(\"height\"), 10); //get the height\n        //draw the buffer\n\n        function drawBuffer() {\n          var step = Math.ceil(data.length / w);\n          var amp = h / 2;\n          p.background(0);\n\n          for (var i = 0; i < w; i++) {\n            var min = 1.0;\n            var max = -1.0;\n\n            for (j = 0; j < step; j++) {\n              var datum = data[i * step + j];\n\n              if (datum < min) {\n                min = datum;\n              } else if (datum > max) {\n                max = datum;\n              }\n            } //p.stroke(p.random(255),p.random(255),p.random(255));\n\n\n            p.rect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp));\n          }\n        }\n\n        p.setup = function () {\n          p.size(w, h);\n          p.background(0); //background black\n          //change the size on resize\n\n          $(window).resize(function () {\n            w = parseInt($(\"#waveform\").css(\"width\"), 10);\n            h = parseInt($(\"#waveform\").css(\"height\"), 10);\n            p.size(w, h); //redraw buffer on resize\n\n            p.stroke(255);\n            drawBuffer();\n          });\n          p.strokeWeight(0.01);\n          p.stroke(255);\n          drawBuffer();\n          p.noLoop();\n        };\n      } //processing - grain display and main interaction system\n\n\n      function grainsdisplay(p) {\n        w = parseInt($(\"#waveform\").css(\"width\"), 10);\n        h = parseInt($(\"#waveform\").css(\"height\"), 10); //setup\n\n        p.setup = function () {\n          p.size(w, h);\n          p.background(0, 0); //backgorund black alpha 0\n\n          p.frameRate(24);\n          p.noLoop(); //change the size on resize\n\n          $(window).resize(function () {\n            w = parseInt($(\"#waveform\").css(\"width\"), 10);\n            h = parseInt($(\"#waveform\").css(\"height\"), 10);\n            p.size(w, h);\n          });\n        }; //mouse events\n\n\n        $(\"#canvas2\").mousedown(function () {\n          mouseState = true;\n\n          if (mouseState) {\n            var v = new voice();\n            v.playmouse(p);\n            voicesmono[0] = v; //have in the array\n          }\n        }).mouseup(function () {\n          mouseState = false;\n\n          for (var i = 0; i < voicesmono.length; i++) {\n            voicesmono[i].stop();\n            voicesmono.splice(i);\n          }\n\n          setTimeout(function () {\n            p.background();\n          }, 300);\n        }).mousemove(function () {\n          X = p.mouseX;\n          Y = p.mouseY;\n        }); //safety for when the mouse is out of the canvas\n\n        $(document).mousemove(function (e) {\n          if (e.target.id !== \"canvas2\") {\n            for (var i = 0; i < voicesmono.length; i++) {\n              voicesmono[i].stop();\n              voicesmono.splice(i);\n              setTimeout(function () {\n                p.background();\n              }, 300);\n            }\n          }\n        }); //touch events\n\n        var canvas2 = document.getElementById(\"canvas2\");\n        canvas2.addEventListener(\"touchstart\", function (event) {\n          event.preventDefault(); //to prevent scrolling\n          //4 touches glitches on ipad\n\n          if (event.touches.length < 4) {\n            for (var i = 0; i < event.touches.length; i++) {\n              if (event.touches[i].target.id === \"canvas2\") {\n                var id = event.touches[i].identifier; //the id will be used for voice stop\n\n                var v = new voice(id);\n                var clientX = event.touches[i].clientX;\n                var clientY = event.touches[i].clientY; //multitouch optimization\n\n                var interval; //calculate the reverse interval\n\n                if (event.touches.length > 1) {\n                  interval = p.map(density, 0, 1, 1, 0.7);\n                } else {\n                  interval = p.map(density, 0, 1, 1, 0);\n                } //play\n\n\n                v.playtouch(p, clientX, clientY, interval);\n                voices.push(v);\n              }\n            }\n          }\n        });\n        canvas2.addEventListener(\"touchend\", function (event) {\n          for (var i = 0; i < voices.length; i++) {\n            for (var j = 0; j < event.changedTouches.length; j++) {\n              if (voices[i].touchid === event.changedTouches[j].identifier) {\n                voices[i].stop();\n              }\n            }\n          } //safety and garbage collection\n\n\n          if (event.touches.length < 1) {\n            for (var i = 0; i < voices.length; i++) {\n              voices[i].stop();\n            }\n\n            voices = [];\n            setTimeout(function () {\n              p.background();\n            }, 200);\n          }\n        });\n        canvas2.addEventListener(\"touchmove\", function (event) {\n          event.preventDefault();\n\n          for (var i = 0; i < voices.length; i++) {\n            for (var j = 0; j < event.changedTouches.length; j++) {\n              if (voices[i].touchid === event.changedTouches[j].identifier) {\n                if (event.changedTouches[j].clientY < h + 50) {\n                  voices[i].positiony = event.changedTouches[j].clientY;\n                  voices[i].positionx = event.changedTouches[j].clientX;\n                } else {\n                  voices[i].stop();\n                }\n              }\n            }\n          }\n        });\n      } //onload\n\n\n      $(document).ready(function () {\n        window.history.pushState(null, null, \"\"); //grain display init\n\n        var canvas2 = document.getElementById(\"canvas2\");\n        var processing = new Processing(canvas2, grainsdisplay);\n        document.addEventListener(\"touchmove\", function (e) {\n          e.preventDefault();\n        }); //gui\n\n        guiinit();\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.clickHandler,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"Click Me!\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/luismiguelascencio/Development/labs/FINAL/granular-test1/src/App.js"],"names":["React","Tone","Granular","App","Component","state","clickHandler","window","AudioContext","webkitAudioContext","mozAudioContext","oAudioContext","context","buffer","buffer2","master","createGain","connect","destination","w","h","data","drawingdata","voices","voicesmono","isloaded","X","Y","mouseState","helpvisible","attack","release","density","spread","reverb","pan","trans","grain","p","positionx","positiony","that","now","currentTime","source","createBufferSource","playbackRate","value","gain","yes","parseInt","random","panner","createPanner","panningModel","distanceModel","setPosition","offset","duration","amp","map","randomoffset","Math","start","setValueAtTime","linearRampToValueAtTime","stop","tms","setTimeout","disconnect","stroke","randomoffsetinpixels","line","height","background","voice","id","touchid","prototype","playmouse","grains","grainscount","play","g","mouseX","mouseY","graincount","dens","interval","timeout","playtouch","clearTimeout","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","b","getChannelData","canvas1","document","getElementById","processing","Processing","waveformdisplay","console","log","send","$","css","drawBuffer","step","ceil","length","i","min","max","j","datum","rect","setup","size","resize","strokeWeight","noLoop","grainsdisplay","frameRate","mousedown","v","mouseup","splice","mousemove","e","target","canvas2","addEventListener","event","preventDefault","touches","identifier","clientX","clientY","push","changedTouches","ready","history","pushState","guiinit","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Tone from \"tone\";\nimport Granular from \"granular-js\";\n\nclass App extends React.Component {\n  state = {};\n\n  clickHandler = () => {\n    window.AudioContext =\n      window.AudioContext ||\n      window.webkitAudioContext ||\n      window.mozAudioContext ||\n      window.oAudioContext;\n    var context = new AudioContext();\n\n    var buffer, buffer2; //global variables for sample files\n\n    //master gain node\n    var master = context.createGain();\n    master.connect(context.destination);\n\n    //global varuables\n    var w, h;\n    var data;\n    var drawingdata = []; //an array that keeps the data\n    var voices = []; //an array for touch events - polyphonic\n    var voicesmono = []; //this will be used for mouse events - monophonic\n    var isloaded = false;\n    var X = 0;\n    var Y = 0;\n    var mouseState = false;\n    var helpvisible = true;\n\n    //control initial settings\n    var attack = 0.4;\n    var release = 0.4;\n    var density = 0.85;\n    var spread = 0.2;\n    var reverb = 0.5;\n    var pan = 0.1;\n    var trans = 1;\n\n    //the grain class\n    function grain(\n      p,\n      buffer,\n      positionx,\n      positiony,\n      attack,\n      release,\n      spread,\n      pan\n    ) {\n      var that = this; //for scope issues\n      this.now = context.currentTime; //update the time value\n      //create the source\n      this.source = context.createBufferSource();\n      this.source.playbackRate.value = this.source.playbackRate.value * trans;\n      this.source.buffer = buffer;\n      //create the gain for enveloping\n      this.gain = context.createGain();\n\n      //experimenting with adding a panner node - not all the grains will be panned for better performance\n      var yes = parseInt(p.random(3), 10);\n      if (yes === 1) {\n        this.panner = context.createPanner();\n        this.panner.panningModel = \"equalpower\";\n        this.panner.distanceModel = \"linear\";\n        this.panner.setPosition(p.random(pan * -1, pan), 0, 0);\n        //connections\n        this.source.connect(this.panner);\n        this.panner.connect(this.gain);\n      } else {\n        this.source.connect(this.gain);\n      }\n\n      this.gain.connect(master);\n\n      //update the position and calcuate the offset\n      this.positionx = positionx;\n      this.offset = this.positionx * (buffer.duration / w); //pixels to seconds\n\n      //update and calculate the amplitude\n      this.positiony = positiony;\n      this.amp = this.positiony / h;\n      this.amp = p.map(this.amp, 0.0, 1.0, 1.0, 0.0) * 0.7;\n\n      //parameters\n      this.attack = attack * 0.4;\n      this.release = release * 1.5;\n\n      if (this.release < 0) {\n        this.release = 0.1; // 0 - release causes mute for some reason\n      }\n      this.spread = spread;\n\n      this.randomoffset = Math.random() * this.spread - this.spread / 2; //in seconds\n      ///envelope\n      this.source.start(\n        this.now,\n        this.offset + this.randomoffset,\n        this.attack + this.release\n      ); //parameters (when,offset,duration)\n      this.gain.gain.setValueAtTime(0.0, this.now);\n      this.gain.gain.linearRampToValueAtTime(this.amp, this.now + this.attack);\n      this.gain.gain.linearRampToValueAtTime(\n        0,\n        this.now + (this.attack + this.release)\n      );\n\n      //garbage collection\n      this.source.stop(this.now + this.attack + this.release + 0.1);\n      var tms = (this.attack + this.release) * 1000; //calculate the time in miliseconds\n      setTimeout(function() {\n        that.gain.disconnect();\n        if (yes === 1) {\n          that.panner.disconnect();\n        }\n      }, tms + 200);\n\n      //drawing the lines\n      p.stroke(p.random(125) + 125, p.random(250), p.random(250)); //,(this.amp + 0.8) * 255\n      //p.strokeWeight(this.amp * 5);\n      this.randomoffsetinpixels = this.randomoffset / (buffer.duration / w);\n      //p.background();\n      p.line(\n        this.positionx + this.randomoffsetinpixels,\n        0,\n        this.positionx + this.randomoffsetinpixels,\n        p.height\n      );\n      setTimeout(function() {\n        p.background();\n        p.line(\n          that.positionx + that.randomoffsetinpixels,\n          0,\n          that.positionx + that.randomoffsetinpixels,\n          p.height\n        );\n      }, 200);\n    }\n\n    //the voice class\n    function voice(id) {\n      this.touchid = id; //the id of the touch event\n    }\n\n    //play function for mouse event\n    voice.prototype.playmouse = function(p) {\n      this.grains = [];\n      this.grainscount = 0;\n      var that = this; //for scope issues\n      this.play = function() {\n        //create new grain\n        var g = new grain(\n          p,\n          buffer,\n          p.mouseX,\n          p.mouseY,\n          attack,\n          release,\n          spread,\n          pan\n        );\n        //push to the array\n        that.grains[that.graincount] = g;\n        that.graincount += 1;\n\n        if (that.graincount > 20) {\n          that.graincount = 0;\n        }\n        //next interval\n        this.dens = p.map(density, 1, 0, 0, 1);\n        this.interval = this.dens * 500 + 70;\n        that.timeout = setTimeout(that.play, this.interval);\n      };\n      this.play();\n    };\n    //play function for touch events - this will get the position from touch events\n    voice.prototype.playtouch = function(p, positionx, positiony) {\n      //this.positiony = positiony;\n      this.positionx = positionx;\n      this.positiony = positiony;\n      this.grains = [];\n      this.graincount = 0;\n\n      var that = this; //for scope issues\n      this.play = function() {\n        //create new grain\n        var g = new grain(\n          p,\n          buffer,\n          that.positionx,\n          that.positiony,\n          attack,\n          release,\n          spread,\n          pan\n        );\n\n        //push to the array\n        that.grains[that.graincount] = g;\n        that.graincount += 1;\n\n        if (that.graincount > 30) {\n          that.graincount = 0;\n        }\n        //next interval\n        this.dens = p.map(density, 1, 0, 0, 1);\n        this.interval = this.dens * 500 + 70;\n        that.timeout = setTimeout(that.play, this.interval);\n      };\n      this.play();\n    };\n\n    //stop method\n    voice.prototype.stop = function() {\n      clearTimeout(this.timeout);\n    };\n\n    //loading the first sound with XML HTTP REQUEST\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", \"audio/guitar.mp3\", true);\n    request.responseType = \"arraybuffer\";\n    request.onload = function() {\n      context.decodeAudioData(\n        request.response,\n        function(b) {\n          buffer = b; //set the buffer\n          data = buffer.getChannelData(0);\n          isloaded = true;\n          var canvas1 = document.getElementById(\"canvas\");\n          //initialize the processing draw when the buffer is ready\n          var processing = new Processing(canvas1, waveformdisplay);\n        },\n        function() {\n          console.log(\"loading failed\");\n        }\n      );\n    };\n    request.send();\n\n    //processing - waveform display - canvas\n    function waveformdisplay(p) {\n      w = parseInt($(\"#waveform\").css(\"width\"), 10); //get the width\n      h = parseInt($(\"#waveform\").css(\"height\"), 10); //get the height\n\n      //draw the buffer\n      function drawBuffer() {\n        var step = Math.ceil(data.length / w);\n        var amp = h / 2;\n\n        p.background(0);\n        for (var i = 0; i < w; i++) {\n          var min = 1.0;\n          var max = -1.0;\n\n          for (j = 0; j < step; j++) {\n            var datum = data[i * step + j];\n            if (datum < min) {\n              min = datum;\n            } else if (datum > max) {\n              max = datum;\n            }\n          }\n          //p.stroke(p.random(255),p.random(255),p.random(255));\n          p.rect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp));\n        }\n      }\n\n      p.setup = function() {\n        p.size(w, h);\n        p.background(0); //background black\n\n        //change the size on resize\n        $(window).resize(function() {\n          w = parseInt($(\"#waveform\").css(\"width\"), 10);\n          h = parseInt($(\"#waveform\").css(\"height\"), 10);\n          p.size(w, h);\n          //redraw buffer on resize\n          p.stroke(255);\n          drawBuffer();\n        });\n        p.strokeWeight(0.01);\n        p.stroke(255);\n        drawBuffer();\n        p.noLoop();\n      };\n    }\n\n    //processing - grain display and main interaction system\n    function grainsdisplay(p) {\n      w = parseInt($(\"#waveform\").css(\"width\"), 10);\n      h = parseInt($(\"#waveform\").css(\"height\"), 10);\n\n      //setup\n      p.setup = function() {\n        p.size(w, h);\n        p.background(0, 0); //backgorund black alpha 0\n        p.frameRate(24);\n        p.noLoop();\n\n        //change the size on resize\n        $(window).resize(function() {\n          w = parseInt($(\"#waveform\").css(\"width\"), 10);\n          h = parseInt($(\"#waveform\").css(\"height\"), 10);\n          p.size(w, h);\n        });\n      };\n\n      //mouse events\n      $(\"#canvas2\")\n        .mousedown(function() {\n          mouseState = true;\n\n          if (mouseState) {\n            var v = new voice();\n            v.playmouse(p);\n            voicesmono[0] = v; //have in the array\n          }\n        })\n        .mouseup(function() {\n          mouseState = false;\n          for (var i = 0; i < voicesmono.length; i++) {\n            voicesmono[i].stop();\n            voicesmono.splice(i);\n          }\n          setTimeout(function() {\n            p.background();\n          }, 300);\n        })\n        .mousemove(function() {\n          X = p.mouseX;\n          Y = p.mouseY;\n        });\n      //safety for when the mouse is out of the canvas\n      $(document).mousemove(function(e) {\n        if (e.target.id !== \"canvas2\") {\n          for (var i = 0; i < voicesmono.length; i++) {\n            voicesmono[i].stop();\n            voicesmono.splice(i);\n            setTimeout(function() {\n              p.background();\n            }, 300);\n          }\n        }\n      });\n\n      //touch events\n      var canvas2 = document.getElementById(\"canvas2\");\n      canvas2.addEventListener(\"touchstart\", function(event) {\n        event.preventDefault(); //to prevent scrolling\n\n        //4 touches glitches on ipad\n        if (event.touches.length < 4) {\n          for (var i = 0; i < event.touches.length; i++) {\n            if (event.touches[i].target.id === \"canvas2\") {\n              var id = event.touches[i].identifier; //the id will be used for voice stop\n              var v = new voice(id);\n              var clientX = event.touches[i].clientX;\n              var clientY = event.touches[i].clientY;\n\n              //multitouch optimization\n              var interval;\n              //calculate the reverse interval\n              if (event.touches.length > 1) {\n                interval = p.map(density, 0, 1, 1, 0.7);\n              } else {\n                interval = p.map(density, 0, 1, 1, 0);\n              }\n\n              //play\n              v.playtouch(p, clientX, clientY, interval);\n              voices.push(v);\n            }\n          }\n        }\n      });\n\n      canvas2.addEventListener(\"touchend\", function(event) {\n        for (var i = 0; i < voices.length; i++) {\n          for (var j = 0; j < event.changedTouches.length; j++) {\n            if (voices[i].touchid === event.changedTouches[j].identifier) {\n              voices[i].stop();\n            }\n          }\n        }\n\n        //safety and garbage collection\n        if (event.touches.length < 1) {\n          for (var i = 0; i < voices.length; i++) {\n            voices[i].stop();\n          }\n          voices = [];\n          setTimeout(function() {\n            p.background();\n          }, 200);\n        }\n      });\n\n      canvas2.addEventListener(\"touchmove\", function(event) {\n        event.preventDefault();\n\n        for (var i = 0; i < voices.length; i++) {\n          for (var j = 0; j < event.changedTouches.length; j++) {\n            if (voices[i].touchid === event.changedTouches[j].identifier) {\n              if (event.changedTouches[j].clientY < h + 50) {\n                voices[i].positiony = event.changedTouches[j].clientY;\n                voices[i].positionx = event.changedTouches[j].clientX;\n              } else {\n                voices[i].stop();\n              }\n            }\n          }\n        }\n      });\n    }\n\n    //onload\n    $(document).ready(function() {\n      window.history.pushState(null, null, \"\");\n      //grain display init\n      var canvas2 = document.getElementById(\"canvas2\");\n      var processing = new Processing(canvas2, grainsdisplay);\n\n      document.addEventListener(\"touchmove\", function(e) {\n        e.preventDefault();\n      });\n      //gui\n      guiinit();\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={this.clickHandler} type=\"button\">\n          Click Me!\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}